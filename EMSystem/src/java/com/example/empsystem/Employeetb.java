package com.example.empsystem;
// Generated Mar 15, 2023 5:14:44 PM by Hibernate Tools 4.3.1

import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.RequestScoped;
import org.hibernate.*;
import org.hibernate.cfg.*;




/**
 * Employeetb generated by hbm2java
 */

@ManagedBean(name="empbean")
@RequestScoped
public class Employeetb  implements java.io.Serializable {

    protected SessionFactory sessionFactory;
    protected Transaction transaction;
    protected Session session;
    protected Configuration configuration;

    protected String [] mySelectedItemList;
    protected Map<String,String> myCountryList = new TreeMap<String,String>();
    protected Map<String,String>  empNameList = new TreeMap<String,String>();
     private int eid;
     private String ename;
     private Double ebasic;
     private String edepartment;
     
     public  Map<String,String> displayEmployeeNameList()
     {
         transaction =  session.beginTransaction();
         Query q = session.createQuery("from Employeetb");
         List<Employeetb> emp = q.list();
         transaction.commit();
         for(int i =0; i<emp.size();i++)
         {
            empNameList.put( emp.get(i).ename.toUpperCase(),""+emp.get(i).eid);
         }
      return empNameList;
    } 

     public  Map<String,String>  addCountries()
     {
        myCountryList.put("OMAN", "oman");
        myCountryList.put("UAE", "uae");
        myCountryList.put("CANADA","canada");
      return myCountryList;
     }

    public String[] getMySelectedItemList() {
        return mySelectedItemList;
    }

    public void setMySelectedItemList(String[] mySelectedItemList) {
        this.mySelectedItemList = mySelectedItemList;
    }
     
     
     
     
     
     
    public Employeetb() 
    {
      configuration = new Configuration();
      configuration.configure("hibernate.cfg.xml");
      sessionFactory = configuration.buildSessionFactory();
      session = sessionFactory.openSession();
    }

    // display all records .........
    public List<Employeetb> displayAllRecords()
    {
      transaction = session.beginTransaction();
      Query query = session.createQuery("from Employeetb E ORDER By E.edepartment, E.ename desc");
      List<Employeetb> emp = query.list();
      transaction.commit();
      return emp;
    
    }
    // search an employee
    public List<Employeetb>  findEmployee()
    {
      transaction = session.beginTransaction();
      Query query =session.createQuery("from Employeetb E "
              + "where E.edepartment like :keyword");
      query.setParameter("keyword","%IT%");
      List<Employeetb> emp = query.list();
      transaction.commit();
      return emp;
    }
    
    public void searchEmployee()
    {
     transaction = session.beginTransaction();
      Query query =session.createQuery("from Employeetb E where E.ename = :emp_name");
      query.setParameter("emp_name",ename);
      List<Employeetb> emp = query.list();
      transaction.commit();
      eid = emp.get(0).eid;
      ename = emp.get(0).ename;
      ebasic = (emp.get(0).ebasic) * 1000;
      edepartment = emp.get(0).edepartment;
           
    }
    // update employee department
    public void updateDepartment(){
    String qstr="UPDATE Employeetb E set E.edepartment = :dept "
            + "where E.eid = :emp_id";
    
     transaction = session.beginTransaction();
     Query q = session.createQuery(qstr);
     q.setParameter("dept", "Business");
     q.setParameter("emp_id",eid);
     int x = q.executeUpdate();
     transaction.commit();
    }
    
    // delete a record by giving employee name...
    public void deteteEmpName(){
    String qstr = "Delete from Employeetb E where E.ename = :emp_name";
    transaction = session.beginTransaction();
     Query q = session.createQuery(qstr);
     q.setParameter("emp_name",ename);
     int x = q.executeUpdate();
     transaction.commit();
    }
    
    
    
    
    
    // delete record ...
    public void deleteRecord()
    {
        session.clear();
        transaction = session.beginTransaction();
        session.delete(new Employeetb(getEid()));
        transaction.commit();
    }
    
    // save the record ......
    
    public void saveRecord()
    {
        session.clear();
        transaction = session.beginTransaction();
        session.save(new Employeetb(getEid(),getEname(),getEbasic(),getEdepartment()));
        transaction.commit();
    }
   
    // update record
    public void updateRecord()
    {
        session.clear();
        transaction = session.beginTransaction();
        session.update(new Employeetb(getEid(),getEname(),getEbasic(),getEdepartment()));
        transaction.commit();
    }
	
    
    
    
    public Employeetb(int eid) {
        this.eid = eid;
    }
    public Employeetb(int eid, String ename, Double ebasic, String edepartment) {
       this.eid = eid;
       this.ename = ename;
       this.ebasic = ebasic;
       this.edepartment = edepartment;
    }
   
    public int getEid() {
        return this.eid;
    }
    
    public void setEid(int eid) {
        this.eid = eid;
    }
    public String getEname() {
        return this.ename;
    }
    
    public void setEname(String ename) {
        this.ename = ename;
    }
    public Double getEbasic() {
        return this.ebasic;
    }
    
    public void setEbasic(Double ebasic) {
        this.ebasic = ebasic;
    }
    public String getEdepartment() {
        return this.edepartment;
    }
    
    public void setEdepartment(String edepartment) {
        this.edepartment = edepartment;
    }




}


